class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.length();
        if(n==0)
            return "";
        bool dp[n][n];
        int max_len=1;
        int start=0;
        memset(dp,false,sizeof(dp));
        for(int i=0;i<n;i++)
        {
            dp[i][i]=true;
            
        }
        for(int i=0;i<n-1;i++)
        {
            if(s[i]==s[i+1]){
            dp[i][i+1]=true;
            start=i;
            max_len=2;
            }
        }
        
        for(int k=3;k<=n;k++)
        {
            for(int i=0;i<n-k+1;i++)
            {
                int j=i+k-1;
                if(s[i]==s[j] && (dp[i+1][j-1])){
                    dp[i][j]=true;
                    if(max_len<k)
                        max_len=k;
                    start=i;
            }}
        }
        string str;
        int end=start+max_len-1;
        while(start<=end)
            str+=s[start++];
        return str;
    }
};
